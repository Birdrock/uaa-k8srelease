apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uaa-k8srelease.fullname" . }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/uaa-configmap.yaml") . | sha256sum }}
  labels:
{{ include "uaa-k8srelease.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "uaa-k8srelease.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "uaa-k8srelease.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: generate-keystore
        image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: keyfile
            value: "/var/run/secrets/uaa/uaa.key"
          - name: crtfile
            value: "/var/run/secrets/uaa/uaa.crt"
          - name: keystore_pkcs12
            value: "/var/run/secrets/keystore.pkcs12"
          - name: password
            value: "k0*l*s3cur1tyr0ck$"
        command: ['/bin/bash']
        args: ['-c', '/var/run/scripts/build_keystore.sh']
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets
          - name: uaa-certs
            mountPath: /var/run/secrets/uaa
      - name: generate-truststore
        image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: uaa_ca_certs
            value: "/var/run/secrets/uaa/ca_certs"
          - name: trust_store_file
            value: "/var/run/secrets/ca-certs"
        command: ['/bin/bash']
        args: ['-c', ' /var/run/scripts/build_truststore.sh']
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets
          - name: ca-certs
            mountPath: /var/run/secrets/uaa/ca_certs
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            initialDelaySeconds: 3600
            httpGet:
              path: /healthz
              scheme: HTTPS
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /healthz
              scheme: HTTPS
              port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: uaa
            mountPath: /workspace/uaa.yml
            subPath: uaa.yml
          - name: log4j
            mountPath: /workspace/log4j2.properties
            subPath: log4j2.properties
          - name: keystore-volume
            mountPath: /var/run/secrets
          - name: logs
            mountPath: /workspace/logs
          env:
            - name: CLOUDFOUNDRY_CONFIG_PATH
              value: /workspace
            - name: CLOUDFOUNDRY_LOG_PATH
              value: /workspace/logs
            - name: CATALINA_OPTS
              value: "-Xmx768m -XX:MaxMetaspaceSize=256m"
            - name: JAVA_OPTS
              value: "-Djavax.net.ssl.trustStore=/var/run/secrets/ca-certs -Djavax.net.ssl.trustStoreType=JKS -Djavax.net.ssl.trustStorePassword=changeit"
      volumes:
        - name: keystore-volume
          emptyDir: {}
        - name: uaa-certs
          secret:
            secretName: uaa-certs
        - name: ca-certs
          secret:
            secretName: ca-certs
        - name: uaa
          configMap:
            name: uaa
        - name: log4j
          configMap:
            name: log4j
        - name: logs
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
